.btn-outline-success{
    color:white;
    border-color:black;
    background-color: black;
    }
    .btn-outline-success:hover{
    background-color: yellow;
    color: black;
      border-color: yellow;
    }
    .p-tag{
      text-decoration: underline;
     display: flex;
      justify-content: center;
      gap: 1rem;
    }
    .a-color{
      color: black;
    }
    .btn-primary{
      display: flex;
      justify-content:center;
      background-color: chocolate;
    }
    footer{
     background-color: black;
      color: white;
    }
    .frist-line{
     border-bottom: 1px solid #392d23;
    }
    .secound-line a {
    color: white;
      text-decoration: none;
    }
    
    .third-line{
      display: none;
    }
    @media screen and (max-width: 48rem){
    .frist-line{
      text-align: center;}
    .secound-line{
      padding-left: 2rem;
     padding-right: 2rem;
     border-bottom: 1px solid #392d23;}/* 칸이 생기는 효과*/
     .third-line{
       display: block;
     }
    }
/*
미디어 쿼리란?
미디어 쿼리는 CSS에서 특정 조건(예: 화면 크기, 해상도 등)에 따라 스타일을 다르게 적용하는 기능이다. 주로 **반응형 웹 디자인**을 구현할 때 사용.

---

 **코드 분석**
```css
@media screen and (max-width: 48rem)
```
- `@media`: 미디어 쿼리를 시작하는 키워드.
- `screen`: 스타일이 적용될 미디어 타입을 지정. (화면 장치에 적용됨)
- `and (max-width: 48rem)`: 화면 너비가 **48rem(=768px)** 이하일 때만 아래 스타일을 적용.

 **적용되는 스타일**
```css
.frist-line {
  text-align: center;
}
```
- `.frist-line` 클래스의 텍스트를 중앙 정렬함.

```css
.secound-line {
  padding-left: 2rem;
  padding-right: 2rem;
  border-bottom: 1px solid #392d23;
}
```
- `.secound-line` 클래스의 왼쪽과 오른쪽 패딩을 각각 `2rem`으로 설정.
- 하단에 `1px` 두께의 `#392d23` 색상의 **테두리(border-bottom)**를 추가.

```css
.third-line {
  display: block;
}
```
- `.third-line` 클래스 요소를 `block` 요소로 변경.

---

### **미디어 쿼리의 활용 예시**
1. **화면 크기에 따라 다른 디자인 적용**
   - 작은 화면(모바일)에서는 요소를 중앙 정렬하고, 패딩을 조정하며, 일부 요소를 블록 형식으로 변경함.

2. **반응형 웹 디자인**
   - `max-width: 48rem` 조건을 만족하면(=화면 크기가 768px 이하이면) 특정 스타일이 적용됨.
   - 즉, 데스크톱에서는 기본 스타일이 적용되지만, **태블릿이나 모바일 화면에서는 다른 스타일이 적용**될 수 있도록 조정 가능.

---

### **미디어 쿼리 예제**
아래는 **더 다양한 화면 크기**에 대응하는 미디어 쿼리 예제다.

```css
 1024px 이하 (태블릿) 
@media screen and (max-width: 64rem) {
  body {
    background-color: lightgray;
  }
}

 768px 이하 (모바일) 
@media screen and (max-width: 48rem) {
  .frist-line {
    font-size: 1.2rem;
  }
  .third-line {
    display: block;
  }
}

 480px 이하 (소형 모바일) 
@media screen and (max-width: 30rem) {
  .frist-line {
    font-size: 1rem;
  }
  .third-line {
    display: none;
  }
}
```
- **태블릿(1024px 이하)**: 배경색을 `lightgray`로 변경.
- **모바일(768px 이하)**: `.frist-line`의 글자 크기를 `1.2rem`으로 변경.
- **소형 모바일(480px 이하)**: `.frist-line` 글자 크기를 `1rem`으로 축소, `.third-line`을 숨김.

---

### **결론**
- **미디어 쿼리는 특정 조건(예: 화면 크기)에 따라 CSS 스타일을 다르게 적용**하는 기능이다.
- **반응형 웹 디자인을 구현할 때 필수적으로 사용**되며, 다양한 해상도에 맞춰 사용자 경험을 최적화할 수 있다.
- 위의 코드에서는 **768px 이하에서 특정 스타일을 변경**하는 예제를 보여주고 있다.

추가로 더 궁금한 점이 있으면 질문해줘! 😊*/